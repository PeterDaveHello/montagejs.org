function makeParser(e){return function(t){var n,a=0,s=1,i=e.apply(this,[function(e){return n=e,expectEof()}].concat(Array.prototype.slice.call(arguments,1)));try{for(var r=0;t.length>r;r++)i=i(t[r],{index:r,line:s,column:a}),"\n"===t[r]?(s++,a=0):a++;i=i("",{index:r,line:s,column:a})}catch(o){if(o.loc){var l=o.loc;o.message+=t.length>80?" at line "+l.line+", column "+l.column:" in "+JSON.stringify(t)+" at index "+l.index}throw o}return n}}function expectEof(){return function(e,t){if(""!==e){var n=Error("Unexpected "+JSON.stringify(e));throw n.loc=t,n}return function a(){return a}}}function makeExpect(e){return function(t){return function(n,a){return n===e?t(n,a):t(null,a)(n,a)}}}exports.makeParser=makeParser,exports.expectEof=expectEof,exports.makeExpect=makeExpect;