montageDefine("6b26a70","tests/test-https-strict",{dependencies:["./server","assert","../index","fs","path"],factory:function(e,t,n){var r=e("./server"),s=e("assert"),o=e("../index"),u=e("fs"),a=e("path"),f={key:a.resolve(__dirname,"ssl/ca/server.key"),cert:a.resolve(__dirname,"ssl/ca/server.crt")},l=r.createSSLServer(null,f),c=a.resolve(__dirname,"ssl/ca/ca.crt"),h=u.readFileSync(c),p={testGet:{resp:r.createGetResponse("TESTING!"),expectBody:"TESTING!"},testGetChunkBreak:{resp:r.createChunkResponse([new Buffer([239]),new Buffer([163]),new Buffer([191]),new Buffer([206]),new Buffer([169]),new Buffer([226]),new Buffer([152]),new Buffer([131])]),expectBody:"Ω☃"},testGetJSON:{resp:r.createGetResponse('{"test":true}',"application/json"),json:!0,expectBody:{test:!0}},testPutString:{resp:r.createPostValidator("PUTTINGDATA"),method:"PUT",body:"PUTTINGDATA"},testPutBuffer:{resp:r.createPostValidator("PUTTINGDATA"),method:"PUT",body:new Buffer("PUTTINGDATA")},testPutJSON:{resp:r.createPostValidator(JSON.stringify({foo:"bar"})),method:"PUT",json:{foo:"bar"}},testPutMultipart:{resp:r.createPostValidator("--__BOUNDARY__\r\ncontent-type: text/html\r\n\r\n<html><body>Oh hi.</body></html>\r\n--__BOUNDARY__\r\n\r\nOh hi.\r\n--__BOUNDARY__--"),method:"PUT",multipart:[{"content-type":"text/html",body:"<html><body>Oh hi.</body></html>"},{body:"Oh hi."}]}};l.listen(l.port,function(){var e=0;for(i in p)(function(){var t=p[i];l.on("/"+i,t.resp),t.uri=l.url+"/"+i,t.strictSSL=!0,t.ca=h,t.headers={host:"testing.request.mikealrogers.com"},o(t,function(n,r,i){if(n)throw n;t.expectBody&&s.deepEqual(t.expectBody,i),e-=1,e===0&&(console.log(Object.keys(p).length+" tests passed."),l.close())}),e++})()})}})