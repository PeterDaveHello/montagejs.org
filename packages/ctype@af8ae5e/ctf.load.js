montageDefine("af8ae5e","ctf",{dependencies:["assert"],factory:function(e,t,n){function a(e,t){var n,r,s,o;n=e.name;if(!("signed"in e.integer))throw new Error("Malformed CTF JSON: integer missing signed value");if(!("length"in e.integer))throw new Error("Malformed CTF JSON: integer missing length value");r=e.integer.signed,s=e.integer.length,o=null,r&&s==1?o="int8_t":s==1?o="uint8_t":r&&s==2?o="int16_t":s==2?o="uint16_t":r&&s==4?o="int32_t":s==4?o="uint32_t":r&&s==8?o="int64_t":s==8&&(o="uint64_t");if(o===null)throw new Error("Malformed CTF JSON: integer has unsupported length and sign - "+s+"/"+r);if(n==o)return;if(n=="char"){i(o=="int8_t");return}t.typedef(n,o)}function f(e,t){var n,r;n=e.name;if(!("length"in e["float"]))throw new Error("Malformed CTF JSON: float missing length value");r=e["float"].length;if(r!=4&&r!=8)throw new Error("Malformed CTF JSON: float has invalid length value");if(r==4){if(n=="float")return;t.typedef(n,"float")}else if(r==8){if(n=="double")return;t.typedef(n,"double")}}function l(e,t){var n,r,i;n=e.name;if(typeof e["typedef"]!="string")throw new Error("Malformed CTF JSON: typedef value in not a string");r=e.typedef;for(i=0;i<u.length;i++)if(n==u[i])return;t.typedef(n,r)}function c(e,t){var n,r,i,s,o,u,a;u=[];if(!Array.isArray(e.struct))throw new Error("Malformed CTF JSON: struct value is not an array");for(i=0;i<e.struct.length;i++){s=e.struct[i];if(!("name"in s))throw new Error("Malformed CTF JSON: struct member missing name");if(!("type"in s))throw new Error("Malformed CTF JSON: struct member missing type");if(typeof s["name"]!="string")throw new Error("Malformed CTF JSON: struct member name isn't a string");if(typeof s["type"]!="string")throw new Error("Malformed CTF JSON: struct member type isn't a string");n=s.name,r=s.type,o=r.indexOf(" ["),o!=-1&&(r=r.substring(0,o)+r.substring(o+1,r.length)),a={},a[n]={type:r},u.push(a)}n=e.name,t.typedef(n,u)}function h(e,t){var n,r;if(!("name"in e))throw new Error('Malformed CTF JSON: entry missing "name" section');for(n=0;n<o.length;n++)o[n]in e&&r++;if(r===0)throw new Error("Malformed CTF JSON: found no entries");if(r>=2)throw new Error("Malformed CTF JSON: found more than one entry");if("integer"in e){a(e,t);return}if("float"in e){f(e,t);return}if("typedef"in e){l(e,t);return}if("struct"in e){c(e,t);return}i(!1,"shouldn't reach here")}function p(e,t){var n,r;i(e),i(t);if(!("metadata"in e))throw new Error("Invalid CTF JSON: missing metadata section");if(!("ctf2json_version"in e.metadata))throw new Error("Invalid CTF JSON: missing ctf2json_version");n=e.metadata.ctf2json_version;for(r=0;r<s.length;r++)if(s[r]==n)break;if(r==s.length)throw new Error("Unsuported ctf2json_version: "+n);if(!("data"in e))throw new Error("Invalid CTF JSON: missing data section");if(!Array.isArray(e.data))throw new Error("Malformed CTF JSON: data section is not an array");for(r=0;r<e.data.length;r++)h(e.data[r],t)}var r=e("assert"),i=r.ok,s=["1.0"],o=["integer","float","typedef","struct"],u=["int8_t","uint8_t","int16_t","uint16_t","int32_t","uint32_t","float","double"];t.ctfParseJson=p}})