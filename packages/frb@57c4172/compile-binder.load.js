montageDefine("57c4172","compile-binder",{dependencies:["./compile-observer","./observers","./binders","./algebra"],factory:function(e,t,n){function a(e){return a.semantics.compile(e)}var s=e("./compile-observer");e("./observers");var r=e("./binders"),i=e("./algebra");n.exports=a,a.semantics={compilers:{property:r.makePropertyBinder,get:r.makeGetBinder,has:r.makeHasBinder,rangeContent:r.makeRangeContentBinder,mapContent:r.makeMapContentBinder,reversed:r.makeReversedBinder},compile:function(e){var t=this.compilers;if("equals"===e.type){var n=this.compile(e.args[0]),a=s(e.args[1]);return r.makeEqualityBinder(n,a)}if("if"===e.type){var o=s(e.args[0]),l=this.compile(e.args[1]),c=this.compile(e.args[2]);return r.makeConditionalBinder(o,l,c)}if("everyBlock"===e.type){var p=s(e.args[0]),h=i(e.args[1],{type:"literal",value:!0}),u=this.compile(h[0]),d=s(h[1]);return r.makeEveryBlockBinder(p,u,d)}if("rangeContent"===e.type){var g,m=s(e.args[0]);try{g=this.compile(e.args[0])}catch(f){g=Function.noop}return r.makeRangeContentBinder(m,g)}if(t.hasOwnProperty(e.type)){var v=e.args.map(s,s.semantics);return t[e.type].apply(null,v)}throw Error("Can't compile binder for "+JSON.stringify(e.type))}}}});